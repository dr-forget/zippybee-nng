/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/** Socket 配置选项 */
export interface SocketOptions {
  recvTimeout?: number
  sendTimeout?: number
}
/** 协议类型枚举 */
export const enum ProtocolType {
  Pair0 = 0,
  Pair1 = 1,
  Pub0 = 2,
  Sub0 = 3,
  Req0 = 4,
  Rep0 = 5,
  Surveyor0 = 6,
  Push0 = 7,
  Pull0 = 8,
  Bus0 = 9
}
/** SocketWrapper 结构体，封装了 nng::Socket */
export class SocketWrapper {
  /** 构造函数 */
  constructor()
  /** 连接到指定的 URL，并设置接收和发送超时 */
  connect(protocol: ProtocolType, url: string, recvTimeout: number, sendTimeout: number): void
  /** 发送消息并接收响应 */
  send(message: Buffer): Buffer
  /** 开始接收消息 */
  recv(callback: (err: Error | null, arg: Buffer) => any): MessageRecvDisposable
  /** 关闭 Socket 和接收线程 */
  close(): void
  /** 检查 Socket 是否已连接 */
  isConnected(): boolean
}
/** 可用于关闭接收线程的结构体 */
export class MessageRecvDisposable {
  /** 关闭接收线程 */
  close(): void
}
